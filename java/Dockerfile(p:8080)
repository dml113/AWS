프로젝트 디렉토리 생성: 먼저 프로젝트를 위한 디렉토리를 생성합니다. 예를 들어, spring-boot-demo라는 이름의 디렉토리를 생성합니다.
mkdir spring-boot-demo
cd spring-boot-demo
build.gradle 파일을 생성하고, 코드를 넣는다.

그 다음, src/main/java/com/example/demo 디렉토리에 DemoApplication.java 파일을 생성하고, 코드를 추가

# curl 설치
apk --no-cache add curl

# 빌드 단계
FROM gradle:6.8.3-jdk11 AS build 
WORKDIR /app
COPY . /app
RUN gradle build --no-daemon   # gradle build --no-daemon 명령을 실행하여 애플리케이션을 빌드합니다. --no-daemon 옵션은 Gradle 데몬을 사용하지 않고 빌드를 실행

# 실행 단계
FROM adoptopenjdk/openjdk11:alpine-jre 
WORKDIR /app 
COPY --from=build /app/build/libs/*.jar /app/app.jar  # 이전 단계에서 빌드한 JAR 파일(*.jar)을 /app/app.jar로 복사
EXPOSE 8080  # 컨테이너 내부에서 8080 포트를 노출합니다.
CMD ["java", "-jar", "app.jar"]  # 컨테이너가 시작될 때 java -jar app.jar 명령을 실행하여 애플리케이션을 실행합니다.
